{"ast":null,"code":"var _jsxFileName = \"/Users/emilyginsburg/Desktop/homework4/HW4Blog/client1/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport CreatePost from \"./components/createpost.component\";\nimport Posts from \"./components/posts.component\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport ourPicture from './our_picture.JPG';\nimport Button from 'react-bootstrap/Button';\nimport axios from 'axios';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: null,\n      signedIn: false,\n      username: \"\",\n      email: \"\"\n    };\n    this.onSignIn = this.onSignIn.bind(this);\n    this.onSignOut = this.onSignOut.bind(this);\n    this.setLight = this.setLight.bind(this);\n    this.setDark = this.setDark.bind(this);\n    this.onSubscribe = this.onSubscribe.bind(this);\n    this.onSuccessSignIn = this.onSuccessSignIn.bind(this);\n    this.handleNameChange = this.handleNameChange.bind(this);\n    this.handleEmailChange = this.handleEmailChange.bind(this);\n  }\n\n  setLight() {\n    if (this.state.mode != \"light\") {\n      this.setState({\n        mode: \"light\"\n      });\n    }\n  }\n\n  setDark() {\n    if (this.state.mode != \"dark\") {\n      this.setState({\n        mode: \"dark\"\n      });\n    }\n  }\n\n  onSubscribe(e) {\n    e.preventDefault();\n    console.log(this.state.username);\n    console.log(this.state.email);\n    const newSubscriber = {\n      username: this.state.username,\n      email: this.state.email\n    };\n    axios.post('/subscriber', newSubscriber).then(res => console.log(res.data));\n    console.log(\"you are subscribed!\");\n  }\n\n  handleEmailChange() {\n    let email = document.getElementById(\"email\").value;\n    console.log(email);\n    this.setState({\n      email: email\n    });\n  }\n\n  handleNameChange() {\n    let username = document.getElementById(\"username\").value;\n    console.log(username);\n    this.setState({\n      username: username\n    });\n  }\n\n  onSuccessSignIn(googleUser) {\n    if (process.env.NODE_ENV === \"production\") {\n      // Useful data for your client-side scripts:\n      var profile = googleUser.getBasicProfile();\n      console.log(\"ID: \" + profile.getId()); // Don't send this directly to your server!\n\n      let name = profile.getName();\n      console.log('Full Name: ' + profile.getName());\n      console.log(\"Email: \" + profile.getEmail()); // The ID token you need to pass to your backend:\n\n      var id_token = googleUser.getAuthResponse().id_token;\n      console.log(\"ID Token: \" + id_token);\n      this.setState({\n        signedIn: true,\n        user: name\n      });\n    } else {\n      this.setState({\n        signedIn: true,\n        user: \"testUser1\"\n      });\n      console.log(\"signed in!\");\n    }\n  }\n\n  onSignIn() {\n    this.setState({\n      signedIn: true\n    });\n  }\n\n  onSignOut() {\n    document.getElementById(\"email\").value = \"\";\n    document.getElementById(\"username\").value = \"\";\n    this.setState({\n      signedIn: false,\n      user: \"\",\n      email: \"\"\n    });\n  }\n\n  render() {\n    const blogDescription = \"Hi there! We are Emily and Tara. We are seniors in EE461L this semester. We have been working on projects together since Freshman Year! We hope you enjoy our blog. Feel free to contribute (once you sign in) :)\";\n    return React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: this.state.mode === \"light\" ? \"main-light\" : \"main-dark\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"navBar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(\"nav\", {\n      className: \"navbar navbar-expand-lg navbar-light bg-light\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"collpase navbar-collapse\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      className: \"navbar-nav mr-auto\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      className: \"navbar-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/\",\n      className: \"nav-link\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, \"Home\")), this.state.signedIn === true ? React.createElement(\"li\", {\n      className: \"navbar-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/create\",\n      className: \"nav-link\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, \"Create New Post\")) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    })))), React.createElement(\"input\", {\n      type: \"text\",\n      onChange: this.handleNameChange,\n      placeholder: \"Enter User Name\",\n      id: \"username\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      onChange: this.handleEmailChange,\n      placeholder: \"Enter Email\",\n      id: \"email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }), this.state.signedIn === false ? React.createElement(\"button\", {\n      onClick: this.onSignIn,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, \"Sign In\") : React.createElement(\"button\", {\n      onClick: this.onSignOut,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, \"Sign Out\"), this.state.signedIn === true ? React.createElement(\"button\", {\n      onClick: this.onSubscribe,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, \"Subscribe\") : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"top-section\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"blog-main-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, \"Welcome to Our Blog\"), React.createElement(\"div\", {\n      className: \"blog-main-desc\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, blogDescription)), React.createElement(\"img\", {\n      src: ourPicture,\n      className: \"App-logo\",\n      alt: \"logo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }), React.createElement(Button, {\n      variant: \"outline-dark\",\n      onClick: this.setLight,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, \"Light Mode\"), React.createElement(Button, {\n      variant: \"outline-dark\",\n      onClick: this.setDark,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, \"Dark Mode\")), React.createElement(Route, {\n      path: \"/\",\n      exact: true,\n      render: props => React.createElement(Posts, Object.assign({}, props, {\n        mode: this.state.mode,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/create\",\n      render: props => React.createElement(CreatePost, Object.assign({}, props, {\n        user: this.state.user,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/emilyginsburg/Desktop/homework4/HW4Blog/client1/src/App.js"],"names":["React","Component","CreatePost","Posts","BrowserRouter","Router","Route","Link","ourPicture","Button","axios","App","constructor","props","state","data","signedIn","username","email","onSignIn","bind","onSignOut","setLight","setDark","onSubscribe","onSuccessSignIn","handleNameChange","handleEmailChange","mode","setState","e","preventDefault","console","log","newSubscriber","post","then","res","document","getElementById","value","googleUser","process","env","NODE_ENV","profile","getBasicProfile","getId","name","getName","getEmail","id_token","getAuthResponse","user","render","blogDescription"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport CreatePost from \"./components/createpost.component\";\nimport Posts from \"./components/posts.component\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport ourPicture from './our_picture.JPG';\nimport Button from 'react-bootstrap/Button';\nimport axios from 'axios';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n        data: null,\n        signedIn: false,\n        username: \"\",\n        email: \"\"\n      };\n      this.onSignIn = this.onSignIn.bind(this);\n      this.onSignOut = this.onSignOut.bind(this);\n      this.setLight = this.setLight.bind(this);\n      this.setDark = this.setDark.bind(this);\n      this.onSubscribe = this.onSubscribe.bind(this);\n      this.onSuccessSignIn = this.onSuccessSignIn.bind(this);\n      this.handleNameChange = this.handleNameChange.bind(this);\n      this.handleEmailChange = this.handleEmailChange.bind(this);\n  }\n\n  setLight() {\n    if(this.state.mode != \"light\") {\n      this.setState({\n        mode: \"light\"\n      });\n    }\n  }\n\n  setDark() {\n    if(this.state.mode != \"dark\") {\n      this.setState({\n        mode: \"dark\"\n      });\n    }\n  }\n\n\n\n  onSubscribe(e){\n    e.preventDefault();\n\n    console.log(this.state.username);\n    console.log(this.state.email);\n\n    const newSubscriber = {\n      username: this.state.username,\n      email: this.state.email\n    };\n\n    axios.post('/subscriber', newSubscriber)\n         .then(res => console.log(res.data));\n\n    console.log(\"you are subscribed!\")\n  }\n\n  handleEmailChange(){\n    let email = document.getElementById(\"email\").value;\n    console.log(email);\n    this.setState({\n      email: email\n    });\n  }\n\n  handleNameChange(){\n    let username = document.getElementById(\"username\").value;\n    console.log(username);\n    this.setState({\n      username: username\n    });\n  }\n\n  onSuccessSignIn(googleUser){\n    if (process.env.NODE_ENV === \"production\"){\n      // Useful data for your client-side scripts:\n      var profile = googleUser.getBasicProfile();\n      console.log(\"ID: \" + profile.getId()); // Don't send this directly to your server!\n      let name = profile.getName();\n      console.log('Full Name: ' + profile.getName());\n      console.log(\"Email: \" + profile.getEmail());\n\n      // The ID token you need to pass to your backend:\n      var id_token = googleUser.getAuthResponse().id_token;\n      console.log(\"ID Token: \" + id_token);\n      this.setState({\n        signedIn: true,\n        user: name\n      });\n    } else{\n      this.setState({\n        signedIn: true,\n        user: \"testUser1\"\n      });\n      console.log(\"signed in!\");\n    }\n  }\n\n  onSignIn(){\n    this.setState({\n      signedIn: true,\n    });\n  }\n\n  onSignOut(){\n    document.getElementById(\"email\").value=\"\";\n    document.getElementById(\"username\").value=\"\";\n    this.setState({\n      signedIn: false,\n      user: \"\",\n      email: \"\"\n    });\n  }\n\n  render() {\n\n    const blogDescription = \"Hi there! We are Emily and Tara. We are seniors in EE461L this semester. We have been working on projects together since Freshman Year! We hope you enjoy our blog. Feel free to contribute (once you sign in) :)\";\n\n    return (\n      <Router>\n      <div className={\n        this.state.mode === \"light\"\n        ? \"main-light\"\n        : \"main-dark\"}>\n        <br/>\n        <div className=\"navBar\">\n          <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n            <div className=\"collpase navbar-collapse\">\n              <ul className=\"navbar-nav mr-auto\">\n                <li className=\"navbar-item\">\n                  <Link to=\"/\" className=\"nav-link\">Home</Link>\n                </li>\n                {this.state.signedIn === true\n                  ? <li className=\"navbar-item\">\n                    <Link to=\"/create\" className=\"nav-link\">Create New Post</Link>\n                  </li>\n                  : <div/>\n                }\n              </ul>\n            </div>\n          </nav>\n          <input type=\"text\" onChange={this.handleNameChange} placeholder=\"Enter User Name\" id=\"username\"/>\n          <input type=\"text\" onChange={this.handleEmailChange} placeholder=\"Enter Email\" id=\"email\"/>\n          {this.state.signedIn === false\n            ? <button onClick={this.onSignIn}>Sign In</button>\n            : <button onClick={this.onSignOut}>Sign Out</button>}\n          {this.state.signedIn === true\n            ? <button onClick={this.onSubscribe}>Subscribe</button>\n            : <div/>}\n        </div>\n          <br/>\n          <div className=\"top-section\">\n            <div className=\"blog-main-header\">\n              <h1>Welcome to Our Blog</h1>\n              <div className=\"blog-main-desc\">{blogDescription}\n              </div>\n            </div>\n           <img src={ourPicture} className=\"App-logo\" alt=\"logo\" />\n           <Button variant=\"outline-dark\" onClick={this.setLight}>Light Mode</Button>\n           <Button variant=\"outline-dark\" onClick={this.setDark}>Dark Mode</Button>\n          </div>\n          <Route path=\"/\" exact render={(props) => <Posts {...props} mode={this.state.mode}/>}  />\n          <Route path=\"/create\" render={(props) => <CreatePost {...props} user={this.state.user}/>} />\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}