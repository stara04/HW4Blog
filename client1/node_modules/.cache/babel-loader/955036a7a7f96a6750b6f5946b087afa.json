{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\stara\\\\HW4Blog\\\\client1\\\\src\\\\components\\\\posts.component.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport Post from './post.component';\nexport default class Posts extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      posts: [],\n      signedIn: false,\n      user: \"\"\n    };\n    this.onSignIn = this.onSignIn.bind(this);\n  }\n\n  onSignIn(googleUser) {\n    if (process.env.NODE_ENV === \"production\") {\n      // Useful data for your client-side scripts:\n      var profile = googleUser.getBasicProfile();\n      console.log(\"ID: \" + profile.getId()); // Don't send this directly to your server!\n\n      let name = profile.getName();\n      console.log('Full Name: ' + profile.getName());\n      console.log(\"Email: \" + profile.getEmail()); // The ID token you need to pass to your backend:\n\n      var id_token = googleUser.getAuthResponse().id_token;\n      console.log(\"ID Token: \" + id_token);\n      this.setState({\n        signedIn: true,\n        user: name\n      });\n    } else {\n      this.setState({\n        signedIn: true,\n        user: \"testUser1\"\n      });\n    }\n  }\n\n  componentDidMount() {\n    axios.get('/posts/').then(response => {\n      this.setState({\n        posts: response.data\n      });\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }\n\n  getPosts() {\n    return this.state.posts.map(function (currentPost, i) {\n      return React.createElement(Post, {\n        post: currentPost,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"g-signin2\",\n      \"data-onsuccess\": \"onSignIn\",\n      \"data-theme\": \"dark\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"Our Posts\"), this.getPosts());\n  }\n\n}","map":{"version":3,"sources":["C:/Users/stara/HW4Blog/client1/src/components/posts.component.js"],"names":["React","Component","Link","axios","Post","Posts","constructor","props","state","posts","signedIn","user","onSignIn","bind","googleUser","process","env","NODE_ENV","profile","getBasicProfile","console","log","getId","name","getName","getEmail","id_token","getAuthResponse","setState","componentDidMount","get","then","response","data","catch","error","getPosts","map","currentPost","i","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,kBAAjB;AAEA,eAAe,MAAMC,KAAN,SAAoBJ,SAApB,CAA8B;AAE3CK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,EADI;AAEXC,MAAAA,QAAQ,EAAE,KAFC;AAGXC,MAAAA,IAAI,EAAE;AAHK,KAAb;AAMA,SAAKC,QAAL,GAAgB,KAAKA,QAAL,CAAcC,IAAd,CAAmB,IAAnB,CAAhB;AACD;;AAEDD,EAAAA,QAAQ,CAACE,UAAD,EAAa;AAEnB,QAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA0C;AACxC;AACA,UAAIC,OAAO,GAAGJ,UAAU,CAACK,eAAX,EAAd;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,SAASH,OAAO,CAACI,KAAR,EAArB,EAHwC,CAGD;;AACvC,UAAIC,IAAI,GAAGL,OAAO,CAACM,OAAR,EAAX;AACAJ,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAgBH,OAAO,CAACM,OAAR,EAA5B;AACAJ,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAYH,OAAO,CAACO,QAAR,EAAxB,EANwC,CAQxC;;AACA,UAAIC,QAAQ,GAAGZ,UAAU,CAACa,eAAX,GAA6BD,QAA5C;AACAN,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAeK,QAA3B;AACA,WAAKE,QAAL,CAAc;AACZlB,QAAAA,QAAQ,EAAE,IADE;AAEZC,QAAAA,IAAI,EAAEY;AAFM,OAAd;AAID,KAfD,MAeM;AACJ,WAAKK,QAAL,CAAc;AACZlB,QAAAA,QAAQ,EAAE,IADE;AAEZC,QAAAA,IAAI,EAAE;AAFM,OAAd;AAID;AACF;;AAEDkB,EAAAA,iBAAiB,GAAG;AAChB1B,IAAAA,KAAK,CAAC2B,GAAN,CAAU,SAAV,EACKC,IADL,CACUC,QAAQ,IAAI;AACd,WAAKJ,QAAL,CAAc;AAAEnB,QAAAA,KAAK,EAAEuB,QAAQ,CAACC;AAAlB,OAAd;AACH,KAHL,EAIKC,KAJL,CAIW,UAAUC,KAAV,EAAgB;AACnBf,MAAAA,OAAO,CAACC,GAAR,CAAYc,KAAZ;AACH,KANL;AAOH;;AAEDC,EAAAA,QAAQ,GAAG;AACL,WAAO,KAAK5B,KAAL,CAAWC,KAAX,CAAiB4B,GAAjB,CAAqB,UAASC,WAAT,EAAsBC,CAAtB,EAAwB;AAChD,aAAO,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAED,WAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACH,KAFM,CAAP;AAGH;;AAEHE,EAAAA,MAAM,GAAG;AACF,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,KAAK,EAAC,WAAX;AAAuB,wBAAe,UAAtC;AAAiD,oBAAW,MAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFJ,EAGK,KAAKJ,QAAL,EAHL,CADJ;AAOH;;AA9DuC","sourcesContent":["import React, { Component } from 'react';\r\n\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport Post from './post.component'\r\n\r\nexport default class Posts extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      posts: [],\r\n      signedIn: false,\r\n      user: \"\"\r\n    };\r\n\r\n    this.onSignIn = this.onSignIn.bind(this);\r\n  }\r\n\r\n  onSignIn(googleUser) {\r\n\r\n    if (process.env.NODE_ENV === \"production\"){\r\n      // Useful data for your client-side scripts:\r\n      var profile = googleUser.getBasicProfile();\r\n      console.log(\"ID: \" + profile.getId()); // Don't send this directly to your server!\r\n      let name = profile.getName();\r\n      console.log('Full Name: ' + profile.getName());\r\n      console.log(\"Email: \" + profile.getEmail());\r\n\r\n      // The ID token you need to pass to your backend:\r\n      var id_token = googleUser.getAuthResponse().id_token;\r\n      console.log(\"ID Token: \" + id_token);\r\n      this.setState({\r\n        signedIn: true,\r\n        user: name\r\n      });\r\n    } else{\r\n      this.setState({\r\n        signedIn: true,\r\n        user: \"testUser1\"\r\n      });\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n      axios.get('/posts/')\r\n          .then(response => {\r\n              this.setState({ posts: response.data });\r\n          })\r\n          .catch(function (error){\r\n              console.log(error);\r\n          })\r\n  }\r\n\r\n  getPosts() {\r\n        return this.state.posts.map(function(currentPost, i){\r\n            return <Post post={currentPost} />;\r\n        })\r\n    }\r\n\r\n  render() {\r\n         return (\r\n             <div>\r\n                 <div class=\"g-signin2\" data-onsuccess=\"onSignIn\" data-theme=\"dark\"></div>\r\n                 <h3>Our Posts</h3>\r\n                { this.getPosts() }\r\n             </div>\r\n         )\r\n     }\r\n }\r\n"]},"metadata":{},"sourceType":"module"}