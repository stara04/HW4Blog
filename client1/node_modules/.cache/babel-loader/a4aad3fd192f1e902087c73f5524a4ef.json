{"ast":null,"code":"var _jsxFileName = \"/Users/emilyginsburg/Desktop/homework4/HW4Blog/client1/src/components/posts.component.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport Post from './post.component';\nexport default class Posts extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      posts: []\n    };\n    this.onSignIn = this.onSignIn.bind(this);\n  }\n\n  onSignIn(googleUser) {\n    if (process.env.NODE_ENV === \"production\") {\n      console.log(\"oops, going to the wrong place\"); // Useful data for your client-side scripts:\n\n      var profile = googleUser.getBasicProfile();\n      console.log(\"ID: \" + profile.getId()); // Don't send this directly to your server!\n\n      let name = profile.getName();\n      console.log('Full Name: ' + profile.getName());\n      console.log(\"Email: \" + profile.getEmail()); // The ID token you need to pass to your backend:\n\n      var id_token = googleUser.getAuthResponse().id_token;\n      console.log(\"ID Token: \" + id_token);\n      this.setState({\n        signedIn: true,\n        user: name\n      });\n    } else {\n      this.setState({\n        signedIn: true,\n        user: \"testUser1\"\n      });\n      console.log(\"signed in!\");\n    }\n  }\n\n  componentDidMount() {\n    axios.get('/posts/').then(response => {\n      this.setState({\n        posts: response.data\n      });\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }\n\n  getPosts() {\n    return this.state.posts.map(function (currentPost, i) {\n      return React.createElement(Post, {\n        post: currentPost,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"Our Posts\"), this.getPosts());\n  }\n\n}","map":{"version":3,"sources":["/Users/emilyginsburg/Desktop/homework4/HW4Blog/client1/src/components/posts.component.js"],"names":["React","Component","Link","axios","Post","Posts","constructor","props","state","posts","onSignIn","bind","googleUser","process","env","NODE_ENV","console","log","profile","getBasicProfile","getId","name","getName","getEmail","id_token","getAuthResponse","setState","signedIn","user","componentDidMount","get","then","response","data","catch","error","getPosts","map","currentPost","i","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,kBAAjB;AAEA,eAAe,MAAMC,KAAN,SAAoBJ,SAApB,CAA8B;AAE3CK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE;AADI,KAAb;AAIA,SAAKC,QAAL,GAAgB,KAAKA,QAAL,CAAcC,IAAd,CAAmB,IAAnB,CAAhB;AACD;;AAEDD,EAAAA,QAAQ,CAACE,UAAD,EAAa;AAEnB,QAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA0C;AACxCC,MAAAA,OAAO,CAACC,GAAR,CAAY,gCAAZ,EADwC,CAExC;;AACA,UAAIC,OAAO,GAAGN,UAAU,CAACO,eAAX,EAAd;AACAH,MAAAA,OAAO,CAACC,GAAR,CAAY,SAASC,OAAO,CAACE,KAAR,EAArB,EAJwC,CAID;;AACvC,UAAIC,IAAI,GAAGH,OAAO,CAACI,OAAR,EAAX;AACAN,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAgBC,OAAO,CAACI,OAAR,EAA5B;AACAN,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAYC,OAAO,CAACK,QAAR,EAAxB,EAPwC,CASxC;;AACA,UAAIC,QAAQ,GAAGZ,UAAU,CAACa,eAAX,GAA6BD,QAA5C;AACAR,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAeO,QAA3B;AACA,WAAKE,QAAL,CAAc;AACZC,QAAAA,QAAQ,EAAE,IADE;AAEZC,QAAAA,IAAI,EAAEP;AAFM,OAAd;AAID,KAhBD,MAgBM;AACJ,WAAKK,QAAL,CAAc;AACZC,QAAAA,QAAQ,EAAE,IADE;AAEZC,QAAAA,IAAI,EAAE;AAFM,OAAd;AAIAZ,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACD;AAEF;;AAEDY,EAAAA,iBAAiB,GAAG;AAChB1B,IAAAA,KAAK,CAAC2B,GAAN,CAAU,SAAV,EACKC,IADL,CACUC,QAAQ,IAAI;AACd,WAAKN,QAAL,CAAc;AAAEjB,QAAAA,KAAK,EAAEuB,QAAQ,CAACC;AAAlB,OAAd;AACH,KAHL,EAIKC,KAJL,CAIW,UAAUC,KAAV,EAAgB;AACnBnB,MAAAA,OAAO,CAACC,GAAR,CAAYkB,KAAZ;AACH,KANL;AAOH;;AAEDC,EAAAA,QAAQ,GAAG;AACL,WAAO,KAAK5B,KAAL,CAAWC,KAAX,CAAiB4B,GAAjB,CAAqB,UAASC,WAAT,EAAsBC,CAAtB,EAAwB;AAChD,aAAO,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAED,WAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACH,KAFM,CAAP;AAGH;;AAEHE,EAAAA,MAAM,GAAG;AACF,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,EAEK,KAAKJ,QAAL,EAFL,CADJ;AAMH;;AA9DuC","sourcesContent":["import React, { Component } from 'react';\n\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport Post from './post.component'\n\nexport default class Posts extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      posts: [],\n    };\n\n    this.onSignIn = this.onSignIn.bind(this);\n  }\n\n  onSignIn(googleUser) {\n\n    if (process.env.NODE_ENV === \"production\"){\n      console.log(\"oops, going to the wrong place\");\n      // Useful data for your client-side scripts:\n      var profile = googleUser.getBasicProfile();\n      console.log(\"ID: \" + profile.getId()); // Don't send this directly to your server!\n      let name = profile.getName();\n      console.log('Full Name: ' + profile.getName());\n      console.log(\"Email: \" + profile.getEmail());\n\n      // The ID token you need to pass to your backend:\n      var id_token = googleUser.getAuthResponse().id_token;\n      console.log(\"ID Token: \" + id_token);\n      this.setState({\n        signedIn: true,\n        user: name\n      });\n    } else{\n      this.setState({\n        signedIn: true,\n        user: \"testUser1\"\n      });\n      console.log(\"signed in!\");\n    }\n\n  }\n\n  componentDidMount() {\n      axios.get('/posts/')\n          .then(response => {\n              this.setState({ posts: response.data });\n          })\n          .catch(function (error){\n              console.log(error);\n          })\n  }\n\n  getPosts() {\n        return this.state.posts.map(function(currentPost, i){\n            return <Post post={currentPost} />;\n        })\n    }\n\n  render() {\n         return (\n             <div>\n                 <h3>Our Posts</h3>\n                { this.getPosts() }\n             </div>\n         )\n     }\n }\n"]},"metadata":{},"sourceType":"module"}