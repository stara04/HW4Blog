{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\stara\\\\HW4Blog\\\\client1\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport CreatePost from \"./components/createpost.component\";\nimport Posts from \"./components/posts.component\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: null\n    };\n  }\n\n  // componentDidMount() {\n  //     // Call our fetch function below once the component mounts\n  //   this.callBackendAPI()\n  //     .then(res => this.setState({ data: res.express }))\n  //     .catch(err => console.log(err));\n  // }\n  //   // Fetches our GET route from the Express server. (Note the route we are fetching matches the GET route from server.js\n  // callBackendAPI = async () => {\n  //   const response = await fetch('/express_backend');\n  //   const body = await response.json();\n  //\n  //   if (response.status !== 200) {\n  //     throw Error(body.message)\n  //   }\n  //   return body;\n  // };\n  render() {\n    return React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(\"nav\", {\n      className: \"navbar navbar-expand-lg navbar-light bg-light\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/\",\n      className: \"navbar-brand\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, \"Tara and Emily's Blog\"), React.createElement(\"div\", {\n      className: \"collpase navbar-collapse\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      className: \"navbar-nav mr-auto\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      className: \"navbar-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/\",\n      className: \"nav-link\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, \"Posts\")), React.createElement(\"li\", {\n      className: \"navbar-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/create\",\n      className: \"nav-link\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, \"Create New Post\"))))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/\",\n      exact: true,\n      component: Posts,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/create\",\n      component: CreatePost,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/stara/HW4Blog/client1/src/App.js"],"names":["React","Component","CreatePost","Posts","BrowserRouter","Router","Route","Link","App","state","data","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AACA,OAAOC,UAAP,MAAuB,mCAAvB;AACA,OAAOC,KAAP,MAAkB,8BAAlB;AACA,OAAO,sCAAP;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,KAAlC,EAAyCC,IAAzC,QAAqD,kBAArD;;AAGA,MAAMC,GAAN,SAAkBP,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAC5BQ,KAD4B,GACpB;AACJC,MAAAA,IAAI,EAAE;AADF,KADoB;AAAA;;AAK1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEAC,EAAAA,MAAM,GAAG;AACP,WACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,+CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAC,GAAT;AAAa,MAAA,SAAS,EAAC,cAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADF,EAEE;AAAK,MAAA,SAAS,EAAC,0BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAI,MAAA,SAAS,EAAC,oBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAI,MAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAC,GAAT;AAAa,MAAA,SAAS,EAAC,UAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,CADF,EAIE;AAAI,MAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAC,SAAT;AAAmB,MAAA,SAAS,EAAC,UAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,CAJF,CADF,CAFF,CADF,EAcE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAdF,EAeE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,GAAZ;AAAgB,MAAA,KAAK,MAArB;AAAsB,MAAA,SAAS,EAAER,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAfF,EAgBE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,SAAZ;AAAsB,MAAA,SAAS,EAAED,UAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAhBF,CADF,CADF;AAsBD;;AA7CyB;;AAgD5B,eAAeM,GAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport './App.css';\r\nimport CreatePost from \"./components/createpost.component\";\r\nimport Posts from \"./components/posts.component\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\r\n\r\n\r\nclass App extends Component {\r\nstate = {\r\n    data: null\r\n  };\r\n\r\n  // componentDidMount() {\r\n  //     // Call our fetch function below once the component mounts\r\n  //   this.callBackendAPI()\r\n  //     .then(res => this.setState({ data: res.express }))\r\n  //     .catch(err => console.log(err));\r\n  // }\r\n  //   // Fetches our GET route from the Express server. (Note the route we are fetching matches the GET route from server.js\r\n  // callBackendAPI = async () => {\r\n  //   const response = await fetch('/express_backend');\r\n  //   const body = await response.json();\r\n  //\r\n  //   if (response.status !== 200) {\r\n  //     throw Error(body.message)\r\n  //   }\r\n  //   return body;\r\n  // };\r\n\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <div className=\"container\">\r\n          <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n            <Link to=\"/\" className=\"navbar-brand\">Tara and Emily's Blog</Link>\r\n            <div className=\"collpase navbar-collapse\">\r\n              <ul className=\"navbar-nav mr-auto\">\r\n                <li className=\"navbar-item\">\r\n                  <Link to=\"/\" className=\"nav-link\">Posts</Link>\r\n                </li>\r\n                <li className=\"navbar-item\">\r\n                  <Link to=\"/create\" className=\"nav-link\">Create New Post</Link>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </nav>\r\n          <br/>\r\n          <Route path=\"/\" exact component={Posts} />\r\n          <Route path=\"/create\" component={CreatePost} />\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}